trigger: none
pr: none
schedules:
- cron: '52 3 * * *'
  displayName: 'Weekly midnight build'
  branches:
    include:
    - develop

parameters:
  - name: triggerPipeline
    displayName: Trigger Pipeline
    type: boolean
    default: False

variables:
  - name: Year
    value: $[format('{0:yyyy}', pipeline.startTime)]
  - name: Month
    value: $[format('{0:M}', pipeline.startTime)]
  - name: Patch
    value: $[counter(format('{0}.{1}', variables['Year'], variables['Month']), 1)]
  - name: weeklyBranchName
    value: 'weekly/$(Year).$(Month).$(Patch)'
  - name: PipelineStartDate
    value: $[format('{0:dd}/{0:MM}/{0:yyyy} {0:HH}:{0:mm}:{0:ss}', pipeline.startTime)]
  - name: NuGetVersion
    value: '$(Year).$(Month).0-preview.$(Patch)'
  - name: AssemblyVersion
    value: '$(Year).$(Month).0.0'

pool: 
  vmImage: 'ubuntu-latest'

stages:
## Create branch and pr
  - stage: CreateChromeBranchAndPR
    displayName: '[CHROME] CHECKOUT AND CREATE WEEKLY BRANCH PR'
    dependsOn: []
    jobs: 
    - job: CreateChromeBranchAndPRJob
      steps:
      - checkout: self
        lfs: true
        persistCredentials: true
      - ${{ if ne(variables['Build.Reason'], 'Schedule') }}:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              echo "Branch name: $(weeklyBranchName)"
              git config --global user.email "devops@ironsoftware.com"
              git config --global user.name "DevOps"
              git checkout -b $(weeklyBranchName)
              git push -u origin $(weeklyBranchName)
              
              # Fetch master branch
              git fetch origin master
              
              if [[ $(git diff --name-only origin/master..$(weeklyBranchName)) ]]; then
                gh pr create \
                --title "[Automation] Weekly Build $(PipelineStartDate)" \
                --body "This PR includes the weekly build base on \`$(Build.SourceBranchName)\` branch on $(Build.SourceVersion) commit.<br>\
                Please review the IronPdf SmokeTests and merge this PR when ready." \
                --reviewer mee-ironsoftware \
                --base master
              else
                echo "No changes detected. Skipping pull request creation."
              fi
          env:
            GH_TOKEN: $(GitHub_PAT)
          displayName: 'CREATE BRANCH & PULL REQUEST'
      - ${{ else }}:
        - script: echo This pipeline does not trigger by Schedule

## Stage to trigger another pipeline
  - stage: CreateReleaseVersion
    displayName: 'CREATE WEEKLY RELEASE VERSION'
    condition: or(eq('${{ parameters.triggerPipeline }}', true), eq(variables['Build.Reason'], 'Schedule'))
    # condition: ne(variables['Build.Reason'], 'ResourceTrigger')
    dependsOn:
    - CreateChromeBranchAndPR
    jobs:
    - job: CreateReleaseVersionJob
      steps:
      - checkout: none
      - script: |
          echo 'NuGetVersion: "$(NuGetVersion)"'
          echo 'AssemblyVersion: "$(AssemblyVersion)"'
      - task: file-creator@6
        displayName: 'STORE VERSION INFORMATION'
        inputs:
          filepath: 'VersionInformation/versions.xml'
          filecontent: |
            <?xml version="1.0" encoding="utf-8"?>
            <Versions>
              <Configuration>Release</Configuration>
              <NuGetVersion>$(NuGetVersion)</NuGetVersion>
              <AssemblyVersion>$(AssemblyVersion)</AssemblyVersion>
              <BuildVersion>$(Patch)</BuildVersion>
              <GitCommitHash>$(Build.SourceVersion)</GitCommitHash>
            </Versions>
          fileoverwrite: true
          verbose: true
      # publish artifacts
      - task: PublishPipelineArtifact@1
        displayName: 'PUBLISH VERSION INFORMATION'
        inputs:
          targetPath: 'VersionInformation'
          artifact: 'Versions'
          publishLocation: 'pipeline'
